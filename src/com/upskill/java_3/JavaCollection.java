package com.upskill.java_3;

public class JavaCollection {

	/*
	 
	 The java.util package contains all the classes and interfaces for the Collection framework.
	 The Collection interface (java.util.Collection) and Map interface (java.util.Map) 
	 are the two main “root” interfaces of Java collection classes.
	 
	 
	 Collection Framework:
	 
	 java.util.Collection (i)
	 
	 		Set (i)
	 				HashSet -> linked HashSet
	 				
	 					HashSet: Hashset store unordered collection containing unique value
						Linked HashSet: The LinkedHashSet is an ordered version of HashSet that maintains a doubly-linked List across all elements.
	 				
	 				Sorted Set (i)-> Navigable Set (i) -> Tree Set
	 				
	 					Sorted Set: A SortedSet is a Set that maintains its elements in ascending order, sorted according to the elements' natural ordering.
	 					Navigable Set: NavigableSet represents a navigable set
	 					Tree Set: TreeSet is a sorted collection that extends the AbstractSet class and implements the NavigableSet interface
	 		
	 		List (i) -> 
	 				ArrayList
	 				Vector
	 				LinkedList
	 				
	 					ArrayList: The ArrayList class is a resizable array
	 					Vector: A vector can be defined as a dynamic array that can grow or shrink on its own
	 					LinkedList: Linked list class is an ordered collection that contains many objects of the same type.
	 		
	 		Queue (i)
	 				
	 				Priority Queue
	 				LinkedList
	 				
	 					Priority Queue: Special type of queue wherein all the elements are ordered as per their natural ordering.
	 					LinkedList: Linked list class is an ordered collection that contains many objects of the same type.
	 
	 java.util.Map (i)
	 		
	 		Hash Map -> linked HashMap
	 		
	 		Hash Table
	 		
	 		Sorted Map (i)-> Navigable Map (i) -> Tree Map
	 		
	 					Hash Map: Hashmap store multipul data using key-value pair, hashmap is syncronized, not thread-safe
	 					Linked HashMap: Provides a way to order and trace the elements
	 					Hash Table: Hashtable is not synchronized, thread safe
	 					Sorted Map: Elements can be traversed in sorted order of keys
	 					Navigable Map: Possible to navigate the keys and values stored in the map
	 					Tree Map: Sorted according to the natural ordering of its keys, or by a Comparator provided at map creation time
	 					
	 Object
	 		Arrays
	 		Collections
	 
	 */
}
